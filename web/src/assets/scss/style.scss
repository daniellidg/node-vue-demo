@import './variables';

* {
    box-sizing: border-box;
    outline: none;
}

html {
    font-size: 13px;
}

body {
    margin: 0;
    padding: 0;
    background: #F1F1F1;
    box-sizing: border-box;
    font-family: "Helvetica Neue",Helvetica,STHeiTi,'\5FAE\8F6F\96C5\9ED1',sans-serif;
    // font-family: Arial, Helvetica, sans-serif;
}

a {
    color: #999;
}

p{
    line-height: 1.5rem;
}

// border
@each $var in (top, right, bottom, left) {
    .border-#{$var} {
        border-#{$var}: 1px solid $borderColor;
    }
}

// text align
@each $var in (left, center, right) {
    .text-#{$var}{
        text-align: $var !important;
    }
}

@each $key, $val in $colors {
    .text-#{$key}{
        color: $val;
    }
    .bg-#{$key}{
        background-color: $val;
    }
}

@each $key, $val in $fonts {
    .fs-#{$key}{
        font-size: $val * 1rem;
    }
}

// flex
.d-flex{
    display: flex;
}

@each $key, $val in $flex-jc {
    .jc-#{$key}{
        justify-content: $val;
    }
}

@each $key, $val in $flex-ai {
    .ai-#{$key}{
        align-items: $val;
    }
}

.flex-1{
    flex: 1;
}

.flex-column{
    flex-direction: column;
}

.flex-wrap{
    flex-wrap: wrap;
}

@each $typeKey, $type in $space-types {
    // m-0, mx-0, my-0
    @each $sizeKey, $size in $space-sizes {
        .#{$typeKey}-#{$sizeKey}{
            #{$type}: $size * $baseSpaceSize;
        }

        .#{$typeKey}x-#{$sizeKey}{
            #{$type}-left: $size * $baseSpaceSize;
            #{$type}-right: $size * $baseSpaceSize;
        }
        .#{$typeKey}y-#{$sizeKey}{
            #{$type}-top: $size * $baseSpaceSize;
            #{$type}-bottom: $size * $baseSpaceSize;
        }
    }

    // mt-0
    @each $directionKey, $direction in $space-directions {
        @each $sizeKey, $size in $space-sizes {
            .#{$typeKey}#{$directionKey}-#{$sizeKey}{
                #{$type}-#{$direction}: $size * $baseSpaceSize;
            }
        }
    }
}

// button
.btn{
    border: none;
    border-radius: 0.1538rem;
    font-size: map-get($fonts, 'sm') * $baseFontSize;
    padding: 0.2rem 0.6rem;
}

// nav bar
.nav{
    display: flex;
    .nav-item{
        color: map-get($colors, 'dark');
        border-bottom: 0.2308rem solid transparent;
        padding-bottom: 0.1rem;
        &.active{
            color: map-get($colors, 'primary');
            border-bottom-color: map-get($colors, 'primary');
        }
    }
    &.reverse{
        .nav-item{
            color: map-get($colors, 'white');
            &.active{
                color: map-get($colors, 'white');
                border-bottom-color: map-get($colors, 'white');
            }
        }
    }
}

.w-100{
    width: 100%;
}
.h-100{
    height: 100%;
}


// sprite
.sprite{
    background: url(../images/index.png) no-repeat 0 0;
    background-size: 28.8462rem;
    display: inline-block;

    &.sprite-story{
        background-position: 90.483% 15.614%;
        width: 1.7692rem;
        height: 1.5385rem;
    }
    &.sprite-logo{
        background-position: 0 72.588%;
        width: 2.3077rem;
        height: 2.3077rem;
    }
    &.sprite-download{
        background-position: 18.73% 71.694%;
        width: 4.6154rem;
        height: 1.8462rem;
    }
    &.sprite-arrow{
        background-position: 38.577% 52.076%;
        width: 0.7692rem;
        height: 0.7692rem;
    }
}

// text overflow ellipsis
.text-ellipsis{
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

